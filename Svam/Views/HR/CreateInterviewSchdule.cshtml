@{
    ViewBag.Title = "CreateInterviewSchdule";
    Layout = "~/Views/Shared/_LayoutSiteMaster.cshtml";

    var al = TempData["success"];
    var alchk = TempData["alert"];
}
@model Traders.Models.CreateInterViewSchduleModel

@*<link href="/datepick/jquery-ui.css" rel="stylesheet" />
    <script src="/datepick/jquery-ui.js"></script>*@
<div class="maincontainer">
    <div class="col-sm-12">
        <div class="col-sm-4 padd0">
            <h1 style="border-bottom: none;"></h1>

        </div>
        <div class="col-sm-8 ovtime">
            <div class="col-sm-2 f-right">
                <input type="button" id="btnRemark" class="btn btn-danger btnSave" value="Send Mail To Admin" />
                <span class="ExtraWorkingLoader" style="display: none; color: red">Please wait...<i class="fa fa-spinner fa-pulse"></i></span>
            </div>
            <div class="col-sm-2 padd0 f-right">
                <input type="checkbox" class="custom_checkbox" id="chkExtraworking" data-name="ExtraWorking" /><span class="working_late_night">Extra Working</span>
            </div>
            <div class="col-sm-3 padd0 f-right">
                <input type="checkbox" class="custom_checkbox" id="chkLateworking" data-name="LateNight" /><span class="working_late_night">Working Late Night</span>
            </div>
        </div>
        <div class="col-sm-12">
            @using (Html.BeginForm("CreateInterviewSchdule", "hr", FormMethod.Post))
            {
                <div class="panel panel-info remark1">
                    <div class="panel-heading">
                        <strong>Create Interview Schedule</strong>
                        @if (TempData["alert"] != null || TempData["alert"] != "")
                        {
                            <span style="margin-left: 15%; color: red;">@TempData["alert"]</span>
                        }
                        @if (TempData["success"] != null || TempData["success"] != "")
                        {
                            <span style="margin-left: 15%; color: green;">@TempData["success"]</span>
                        }
                        <span class="col-xs-12" style="float: right; margin:px; margin-top:10px;"><a href="#" data-toggle="modal" data-target="#UploadInterviewModal" class="btn btn-default col-xs-12">Upload Data</a></span>

                        <input type="submit" name="Submit" value="Create" class="btn btn-success btnSave col-xs-12" style="float: right; margin-right: 5px; margin-top: 2px;">
                        <input type="button" value="View Interview Schdule" class="btn btn-danger col-xs-12" style="float: right; margin-right: 5px; margin-top: 2px;" onclick="location.href = '/Hr/ViewInterviewSchedule'" />
                    </div>
                    <div class="panel-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                <label class="control-label col-sm-2">Candidate Name</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.CandidateName, new { @class = "form-control", @placeholder = "Candidate Name" })
                                    @Html.ValidationMessageFor(em => em.CandidateName)
                                </div>
                                <label class="control-label col-sm-2">Profile</label>
                                <div class="col-sm-3">
                                    @Html.DropDownListFor(em => em.ProfileID, new SelectList(Model.ProfileList, "ProfileID", "Profile"), "Select Profile", new { @class = "form-control", translate = "no" })
                                    @Html.ValidationMessageFor(em => em.ProfileID)
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Telephone No </label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.Telephone, new { @class = "form-control allowInt",  @placeholder = "Telephone No", translate = "no" })
                                </div>
                                <label class="control-label col-sm-2">Mobile Number</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.MobileNo, new { @class = "form-control allowInt",  @placeholder = "Mobile Number", translate = "no" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">e-mail</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.Email, new { @class = "form-control", @placeholder = "e-mail" })
                                </div>
                                <label class="control-label col-sm-2">Date of Birth</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.DOB, new { @class = "form-control datefield", @placeholder = "Date of Birth", autocomplete = "off" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Postal Address</label>
                                <div class="col-sm-8">
                                    @Html.TextAreaFor(em => em.PostalAddress, new { @class = "form-control textAreaResize", @rows = "3", @placeholder = "Postal Address" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Work Experience</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.TotalExp, new { @class = "form-control", @placeholder = "Work Experience" })
                                    @Html.ValidationMessageFor(em => em.TotalExp)
                                </div>
                                <label class="control-label col-sm-2">Resume Title</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.ResumeTitle, new { @class = "form-control", @placeholder = "Resume Title" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Current Location</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.CurrentLocation, new { @class = "form-control", @placeholder = "Current Location" })
                                </div>
                                <label class="control-label col-sm-2">Preferred Location</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.PreferredLocation, new { @class = "form-control", @placeholder = "Preferred Location" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Current Employer </label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.CurrentEmployer, new { @class = "form-control", @placeholder = "Current Employer" })
                                </div>
                                <label class="control-label col-sm-2">Current Designation</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.CurrentDesignation, new { @class = "form-control", @placeholder = "Current Designation" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Annual Salary </label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.AnnualSalary, new { @class = "form-control", @placeholder = "Annual Salary" })
                                </div>
                                <label class="control-label col-sm-2">U.G.Courses</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.UGCourses, new { @class = "form-control", @placeholder = "U.G.Courses" })

                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">P.G.Courses</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.PGCourses, new { @class = "form-control", @placeholder = "P.G.Courses" })
                                </div>
                                <label class="control-label col-sm-2">P.P.G.Courses</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.PPGCourses, new { @class = "form-control", @placeholder = "P.P.G.Courses" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">FollowUp Date</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.FollowUpDate, new { @class = "form-control datefield", @placeholder = "FollowUp Date", autocomplete = "off" })
                                </div>
                                <label class="control-label col-sm-2">Interview Date</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.InterviewDate, new { @class = "form-control datefield", @placeholder = "Interview Date", autocomplete = "off" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Status</label>
                                <div class="col-sm-3">
                                    @Html.DropDownListFor(em => em.InterviewStatusID, new SelectList(Model.InterviewStatusList, "InterviewStatusID", "InterviewStatusName"), "Select Interview Status", new { @class = "form-control", translate = "no" })
                                    @Html.ValidationMessageFor(em => em.InterviewStatusID)
                                </div>
                                <label class="control-label col-sm-2">Last Activate Date</label>
                                <div class="col-sm-3">
                                    @Html.TextBoxFor(em => em.LastActivateDate, new { @class = "form-control datefield", @placeholder = "Last Activate Date",autocomplete="off" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-sm-2">Remarks</label>
                                <div class="col-sm-8">
                                    @if (ViewContext.RouteData.Values["id"] != null)
                                    {
                                        <a href="#" data-toggle="modal" data-target="#AddDescript">Add Decsription</a>
                                        <a href="#" class="PopViewDesc" data-toggle="modal" data-target="#ViewDescript" style="margin-left: 10px;">View Decsription</a>
                                    }
                                    else
                                    {
                                        @Html.TextAreaFor(em => em.Remarks, new { @class = "form-control textAreaResize", @rows = "5", @placeholder = "Remarks" })
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Start Upload File Modal -->
@using (Html.BeginForm("UploadInterview", "hr", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div id="UploadInterviewModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Upload Interview Schedule</h4>
                </div>
                <div class="modal-body over-hidden">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-sm-4" for="email">Upload File</label>
                            <div class="col-sm-8">
                                <input type="file" id="file" name="file" class="form-control">
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-sm-4" for="pwd">&nbsp;</label>
                            <div class="col-sm-8">
                                <button type="submit" class="btn btn-default" id="btnChangePassword">Save</button><span style="margin-left: 10px;" id="spnChangePswdAlertmsg"></span>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}

<!--Modal- Add Description-->
<div id="AddDescript" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Description</h4>
            </div>
            <div class="modal-body over-hidden">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-sm-4" for="email">Description:</label>
                        <div class="col-sm-8">
                            <textarea id="txtDescription" class="form-control" placeholder="Description...." style="height: 120px;"></textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-4" for="pwd">&nbsp;</label>
                        <div class="col-sm-8">
                            <button type="submit" class="btn btn-default" id="btnAddDescription">Submit</button><span style="margin-left: 10px;" id="spndescAlertmsg"></span>
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!--Modal View-Description-->
<div id="ViewDescript" class="modal fade" role="dialog"></div>

<script src="/js/jquery-1.11.3.min.js"></script>

<!--For Validation ....-->
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>

<link href="/Scripts/SweetAlert/sweetalert.css" rel="stylesheet" />
<script src="/Scripts/SweetAlert/sweetalert.min.js"></script>

<link href="/timepicker/bootstrap-timepicker.min.css" rel="stylesheet">
<script src="/timepicker/bootstrap-timepicker.js"></script>

<script>

    var mas = '@al';
    var chkmsg = '@alchk';
    if (mas != '') {
        swal("Success !", mas, "success");
    }
    if (chkmsg != '') {
        swal("Alert !", chkmsg, "warning");
    }

</script>



<script type="text/javascript">
    jQuery(document).ready(function () {
        var Getid = '@ViewContext.RouteData.Values["id"]';
        if (Getid != '') {
            jQuery('.btnSave').val('Update');
        }
        //$('.followupdate').datepicker({
        //    dateFormat: "mm/dd/yy",
        //    //maxDate: 0,
        //    minDate: 0,
        //    onSelect: function (date_text, inst) {
        //    }
        //});


        $(".allowInt").on("keypress keyup blur", function (event) {
            this.value = this.value.replace(/[^0-9\.]/g, '');
            //$(this).val($(this).val().replace(/[^\d].+/, ""));
            //if ((event.which < 48 || event.which > 57)) {
            //    event.preventDefault();
            //}
        });
    });

         var dateFormat = '@Session["DpDateFormat"]';
    $(function () {
        $('#DOB').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20
        });

        $('#FollowUpDate').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20
        });

        $('#InterviewDate').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20
        });

        $('#LastActivateDate').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20
        });
    });

    jQuery('#btnAddDescription').click(function () {
        var Desc = jQuery('#txtDescription').val();
        var LeadId = '@ViewContext.RouteData.Values["id"]';
        if (Desc != '' && LeadId != '') {
            jQuery.post('/hr/addDescription/', { Description: Desc, Iid: LeadId }, function (data) {
                if (data = 'done') {
                    jQuery('#spndescAlertmsg').text('Description added successfully.');
                    jQuery("#spndescAlertmsg").show().delay(1000).fadeOut();
                    jQuery('#txtDescription').val('');
                }
            });
        }
        else {
            //alert("Please input a description");
            swal("Alert !", "Please input a description", "warning");
        }
    });

    $('.PopViewDesc').on('click', function () {
        var leadid = '@ViewContext.RouteData.Values["id"]';
        if (leadid != '') {
            $.post('/hr/ViewInterviewDecsription', { Iid: leadid }, function (data) {
                jQuery('#ViewDescript').html(data);
                $($(this).data("#ViewDescript")).show();
            });
        }
    });

</script>
<script type="text/javascript">
    //Send the Mail...on Extra working and Late Night working...
    jQuery('#btnRemark').click(function () {
        if (confirm('are you sure want to send a mail to Admin about this working!')) {
            var Extraworking = false;
            var Lateworking = false;
            if ($('#chkExtraworking').is(":checked")) {
                Extraworking = true;
            }
            if ($('#chkLateworking').is(":checked")) {
                Lateworking = true;
            }

            if (Extraworking == true || Lateworking == true) {
                jQuery('#btnRemark').hide();
                jQuery('.ExtraWorkingLoader').show();
                return false;
                jQuery.post('/common/ExtraworkingOrLateNightMark', { ExtraWorking: Extraworking, LateNightWorking: Lateworking }, function (data) {
                    if (data != '') {
                        alert(data);
                        $('#chkExtraworking').prop('checked', false);
                        $('#chkLateworking').prop('checked', false);
                        jQuery('#btnRemark').show();
                        jQuery('.ExtraWorkingLoader').hide();
                    }
                    else {
                        $('#chkExtraworking').prop('checked', false);
                        $('#chkLateworking').prop('checked', false);
                        jQuery('#btnRemark').show();
                        jQuery('.ExtraWorkingLoader').hide();
                    }

                });
            }
            else {
                //alert('Please check any option.');
                swal("Alert !", "Please check any option.", "warning");
            }
        }
    });
</script>
<style>
    .field-validation-error {
        margin-left: 2px;
        color: #ff0000;
        font-size: 12px !important;
        display: block;
        margin-top: 43px;
        font-weight: normal !important;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }
</style>