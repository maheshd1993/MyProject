@{
    ViewBag.Title = "Create-Users";
    Layout = "~/Views/Shared/_LayoutSiteMaster.cshtml";

    var al = TempData["success"];
    var alchk = TempData["alert"];
}
@model Traders.Models.CreateUserModel


<div class="maincontainer">
    @using (Html.BeginForm("createusers", "HR", FormMethod.Post, new { enctype = "multipart/form-data", id = "leadForm" }))
    {
        @Html.HiddenFor(a => a.UserID)
        <div class="col-sm-12">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <strong>Create New Employee</strong>

                </div>
                <div class="panel-body">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#userinfotab" data-toggle="tab">Employee Info</a></li>
                        <li><a href="#userSalarytab" data-toggle="tab">Salary Detail</a></li>

                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade in active" id="userinfotab">
                            <div class="form-horizontal">
                                <div class="refwrap">
                                    <h2>Employee Detail</h2>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2">First Name <span class="errormark">*</span></label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.FirstName, htmlAttributes: new { @class = "form-control", @placeholder = "Enter First Name", @autocomplete = "off", required = "required" })
                                        @Html.ValidationMessageFor(em => em.FirstName)
                                    </div>
                                    <label class="control-label col-sm-2">Last Name <span class="errormark">*</span></label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.LastName, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Last Name", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(em => em.LastName)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2">Father Name</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.FatherName, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Father Name", @autocomplete = "off" })
                                    </div>
                                    <label class="control-label col-sm-2">Date Of Birth</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.DateofBirth, htmlAttributes: new { @class = "form-control datefield", @placeholder = "Enter Date Of Birth", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2">Contact No. <span class="errormark">*</span></label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.ContactNumber, htmlAttributes: new { @class = "form-control", @maxlength = "10", @onkeydown = "numericOnly(this,event)", @placeholder = "Enter Contact Number", @autocomplete = "off" })

                                        @Html.ValidationMessageFor(em => em.ContactNumber)
                                    </div>
                                    <label class="control-label col-sm-2">Alternate No.</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.AlternateNumber, htmlAttributes: new { @class = "form-control", @maxlength = "10", @onkeydown = "numericOnly(this,event)", @placeholder = "Enter Alternate Number", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2">e-mail <span class="errormark">*</span></label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.Email, htmlAttributes: new { @class = "form-control", @placeholder = "Enter e-mail", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(em => em.Email)
                                    </div>
                                    <label class="control-label col-sm-2">Gender <span class="errormark">*</span></label>
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                                        { new SelectListItem{Text="Male", Value="1"},
                                       new SelectListItem{Text="Female", Value="2"}}, "Select Gender", htmlAttributes: new { @class = "form-control", @autocomplete = "off", required = "required" })
                                        @Html.ValidationMessageFor(em => em.Gender)
                                    </div>

                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2">Employee Code <span class="errormark">*</span></label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.EmployeeCode, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Employee Code", @autocomplete = "off" })
                                        @Html.ValidationMessageFor(em => em.EmployeeCode)
                                    </div>
                                    <label class="control-label col-sm-2">Branch Name <span class="errormark">*</span></label>
                                    <div class="col-sm-3">
                                        @Html.DropDownListFor(em => em.BranchID, new SelectList(Model.obranchList, "BranchID", "CompanyBranchName"), "Select Branch", htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(em => em.BranchID)
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2">Designation</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.Designation, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Designation", @autocomplete = "off" })
                                    </div>
                                    <label class="control-label col-sm-2">Time Zone</label>
                                    <div class="col-sm-3">
                                        @Html.DropDownList("TimeZoneName", null, htmlAttributes: new { @class = "form-control" })
                                    </div>

                                </div>

                                <div class="form-group">
                                    <label class="control-label col-sm-2">Permanent Address</label>
                                    <div class="col-sm-3">
                                        @Html.TextAreaFor(em => em.PermanentAddress, htmlAttributes: new { @class = "form-control textAreaResize", @rows = "4", @placeholder = "Enter Permanent Address", @autocomplete = "off" })
                                    </div>


                                    <label class="control-label col-sm-2">Current Address</label>
                                    <div class="col-sm-3">
                                        @Html.TextAreaFor(em => em.CurrentAddress, htmlAttributes: new { @class = "form-control textAreaResize", @rows = "4", @placeholder = "Enter Current Address", @autocomplete = "off" })
                                    </div>
                                </div>
                                @*<div class="form-group">
                                        <label class="control-label col-sm-2">Password <span class="errormark">*</span></label>
                                        <div class="col-sm-3">
                                            @Html.TextBoxFor(em => em.UserPassword, htmlAttributes: new { @class = "form-control", @value = @Model.UserPassword, @placeholder = "Enter Password", @autocomplete = "off" })
                                            @Html.ValidationMessageFor(em => em.UserPassword)
                                        </div>
                                        <label class="control-label col-sm-2">Confirm Password <span class="errormark">*</span></label>
                                        <div class="col-sm-3">
                                            @Html.TextBoxFor(em => em.ConfirmPassword, htmlAttributes: new { @class = "form-control", @value = @Model.UserPassword, @placeholder = "Enter Confirm Password", @autocomplete = "off" })
                                            @Html.ValidationMessageFor(em => em.ConfirmPassword)
                                        </div>
                                    </div>*@
                                <div class="form-group">
                                    <label class="control-label col-sm-2">Upload Documents</label>
                                    <div class="col-sm-6">
                                        <input type="file" name="Documents" multiple class="form-control" />
                                    </div>
                                </div>

                                <div class="refwrap">
                                    <h2>Reference 1</h2>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Name</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.RefName1, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Name", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">Phone Number</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.RefPhoneNumber1, htmlAttributes: new { @class = "form-control", @maxlength = "10", @onkeydown = "numericOnly(this,event)", @placeholder = "Enter Phone Number", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">e-mail</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.RefEmail1, htmlAttributes: new { @class = "form-control", @placeholder = "Enter e-mail", @autocomplete = "off" })
                                    </div>
                                </div>

                                <div class="refwrap">
                                    <h2>Reference 2</h2>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Name</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.RefName2, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Name", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">Phone Number</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.RefPhoneNumber2, htmlAttributes: new { @class = "form-control", @maxlength = "10", @onkeydown = "numericOnly(this,event)", @placeholder = "Enter Phone Number", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">e-mail</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.RefEmail2, htmlAttributes: new { @class = "form-control", @placeholder = "Enter e-mail", @autocomplete = "off" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="userSalarytab">
                            <div class="form-horizontal">
                                <div class="refwrap">
                                    <h2>Bank Detail</h2>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Bank Name</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.BankName, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Bank Name", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">Branch Name</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.BranchName, htmlAttributes: new { @class = "form-control", @placeholder = "Enter Branch Name", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">A/C Number</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.AccountNumber, htmlAttributes: new { @class = "form-control", @placeholder = "Enter A/C Number", @autocomplete = "off" })
                                    </div>
                                    <label class="control-label col-sm-2" for="userid">IFSC Code</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.IFSCCode, htmlAttributes: new { @class = "form-control", @placeholder = "Enter IFCS Code", @autocomplete = "off" })
                                        @*@Html.ValidationMessageFor(em => em.IFSCCode)*@
                                    </div>
                                </div>
                                <div class="refwrap">
                                    <h2>Salary</h2>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Monthly Salary</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.MonthlySalary, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Monthly Salary", @autocomplete = "off" })
                                    </div>
                                    <label class="control-label col-sm-2" for="userid">Annual Salary</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.AnnualSalary, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Annual Salary", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="refwrap">
                                    <h2>Monthly Salary Breakup</h2>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Basic Salary</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.BasicSalary, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Basic Salary", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">H.R.A</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.HRA, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter H.R.A", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Travelling Allowance</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.TravellingAllowance, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Travelling Allowance", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">Medical Allowance</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.MedicalAllowance, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Medical Allowance", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Performance Incentive</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.PerformanceIncentive, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Performance Incentive", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">Other Benefits</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.OtherBenefits, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Other Benefits", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="refwrap">
                                    <h2>Deduction</h2>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">PF Employee Share</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.PFEmployeeShare, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter PF Employee Share", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">PF Employer Share</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.PFEmployerShare, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter PF Employer Share", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">ESIC Employer & Employee</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.ESICEmployerEmployee, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter ESIC Employer & Employee", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">TDS</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.TDS, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter TDS", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">LWF</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.LWF, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter LWF", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">Security</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.Security, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Security", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Advance</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.Advance, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Advance", @autocomplete = "off" })
                                    </div>

                                    <label class="control-label col-sm-2" for="userid">Leave without pay</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.LWP, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Leave without pay", @autocomplete = "off" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-2" for="userid">Other Deduction</label>
                                    <div class="col-sm-3">
                                        @Html.TextBoxFor(em => em.OtherDeduction, htmlAttributes: new { @class = "form-control floatIntOnly", @placeholder = "Enter Other Deduction", @autocomplete = "off" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-12 text-center">
                                <button type="submit" class="btn btn-success">Save</button>
                                <button type="button" class="btn btn-danger" onclick="location.href='/HR/users'">Go Back </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</div>


<script src="~/Scripts/jquery-1.7.1.min.js"></script>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<link href="~/Scripts/SweetAlert/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/SweetAlert/sweetalert.min.js"></script>

<script>
    var mas = '@al';
    var chkmsg = '@alchk';
    if (mas != '') {
        swal("Success !", mas, "success");
    }
    if (chkmsg != '') {
        swal("Alert !", chkmsg, "warning");
    }
    $(document).ready(function () {
        var GetId = '@ViewContext.RouteData.Values["Id"]';
        if (GetId != '') {
            jQuery('.dis').attr('disabled', 'disabled');
            //Hide the password div
            jQuery('.Divhd').hide();
        }
    });
</script>
<script type="text/javascript">
    var dateFormat = '@Session["DpDateFormat"]';
    $(function () {
        $('#DateofBirth').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20
        });
    });

    $('input[name="chkAllUserList"]').click(function () {
        if ($(this).is(':checked')) {
            jQuery('.chk').prop('checked', true);
            //that.pageselected = true;
        } else {
            jQuery('.chk').prop('checked', false);
            //that.pageselected = false;
        }
    });

    //Uncheck The Top check if Loop checkbox is Uncheck
    $('.chk').click(function () {

        if ($(this).is(':unchecked')) {
            $('input[name="chkAllUserList"]').prop('checked', false);
        }
        else {
            if ($('.chk:checked').length == $('.chk').length) {
                $('input[name="chkAllUserList"]').prop('checked', true);
            }
        }
    });

    function numericOnly(element, e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    }

    $('.floatIntOnly').keypress(function (event) {
        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }
    });

</script>
<style>
    .errormark {
        color: red;
    }

    .field-validation-error {
        margin-left: 2px;
        color: #ff0000;
        font-size: 12px !important;
        display: block;
        margin-top: 43px;
        font-weight: normal !important;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }
</style>
