@{
    ViewBag.Title = "Assign";
    Layout = "~/Views/Shared/_LayoutSiteMaster.cshtml";
    var al = TempData["success"];
    var alchk = TempData["alert"];
}

@model Traders.Models.DailyworkAssignDeveloperModel
<div class="maincontainer">
    <div class="form-horizontal">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-12">
                    <div class="panel panel-info">
                        <div class="panel-heading">
                            <strong>Create and Assign Work</strong>
                            <div class="row" style="padding-right: 2.5%;">
                                <div class="col-sm-9 padd0"></div>
                                <div class="col-sm-3 padd0 developer_paddo">
                                    <a href="#" data-toggle="modal" data-target="#AddWorkModal" class="btn btn-success" style="float: right; margin-right: 15px; color:white;">Add Work</a>
                                </div>
                            </div>
                        </div>
                        <div class="panel-body body_pnl">
                            <div class="col-sm-12" style="padding: 3px 0px 11px 0px">
                                @using (Html.BeginForm("Assign", "Dailywork", FormMethod.Post))
                                {

                                    <div class="col-sm-2">
                                        <select id="assignProject" class="form-control ListItemCapitalize clr" name="assignProject">
                                            <option>Select Project</option>
                                        </select>
                                        @*@if (Model.projectddlist != null && Model.projectddlist.Count() > 0)
                                            {
                                                @Html.DropDownList("ppName", new SelectList(Model.projectddlist, "ProjectId", "ProjectName", Convert.ToString(Session["ProjectId"])), "Select Project", new { @class = "form-control ListItemCapitalize", @style = "margin-top:0px !important;", translate = "no" })
                                            }
                                            else
                                            {
                                                @Html.DropDownList("ppName", Enumerable.Empty<SelectListItem>(), "Select Project", new { @class = "form-control ListItemCapitalize", @style = "margin-top:0px !important;" })
                                            }*@

                                    </div>

                                    <div class="col-sm-2">
                                        <select id="assignProjectModule" class="form-control ListItemCapitalize clr" name="assignProjectModule">
                                            <option>Select Module</option>
                                        </select>
                                        @*@if (Model.Modelddlist != null && Model.Modelddlist.Count() > 0)
                                            {
                                                @Html.DropDownList("MName", new SelectList(Model.Modelddlist, "MID", "ModuleName", Convert.ToString(Session["MID"])), "Select Model", new { @class = "form-control ListItemCapitalize", @style = "margin-top:0px !important;", translate = "no" })
                                            }
                                            else
                                            {
                                                @Html.DropDownList("MName", Enumerable.Empty<SelectListItem>(), "Select Model", new { @class = "form-control ListItemCapitalize", @style = "margin-top:0px !important;" })
                                            }*@
                                    </div>
                                    <div class="col-sm-2">
                                        <select id="assignCustomer" class="form-control ListItemCapitalize clr" name="assignCustomer">
                                            <option>Select Customer</option>
                                        </select>
                                        @*@if (Model.Customerlist != null && Model.Customerlist.Count() > 0)
                                            {
                                                @Html.DropDownList("CName", new SelectList(Model.Customerlist, "CustomerName", "CustomerName"), "Select Customer", new { @class = "form-control ListItemCapitalize", @style = "margin-top:0px !important;", translate = "no" })
                                            }
                                            else
                                            {
                                                @Html.DropDownList("CName", Enumerable.Empty<SelectListItem>(), "Select Customer", new { @class = "form-control ListItemCapitalize", @style = "margin-top:0px !important;" })
                                            }*@
                                        @*@Html.TextBoxFor(em => em.LeadCustomer, new { @class = "form-control caps" })
                                            <input type="hidden" name="CustomerId" id="HdCustomerId" value="@Model.LeadCustomerID" />*@
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="text" class="form-control datefield" name="FromDate" id="FromDate" autocomplete="off" placeholder="From Date" data-date-format="@Session["DpDateFormat"]" value="@Convert.ToString(Session["VLFltrFrmDt"])" required="required" readonly />
                                    </div>
                                    <div class="col-sm-2">
                                        <input type="text" class="form-control datefield" name="ToDate" id="ToDate" placeholder="To Date" autocomplete="off" data-date-format="@Session["DpDateFormat"]" value="@Convert.ToString(Session["VLFltrToDt"])" required="required" readonly />
                                    </div>
                                    <div class="col-sm-2 padd0">
                                        <input id="Submit1" class="btn btn-danger" style="margin-left: 10px;" type="submit" value="Filter" />
                                        <input class="btn btn-success" type="button" value="Reset" onclick="location.href = '/Dailywork/Assign'" />
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @using (Html.BeginForm("AssignToUser", "Dailywork", FormMethod.Post))
            {
                <div class="row">
                    <div class="col-sm-12 ">
                        <div class="form-group pull-right">
                            <div class="col-sm-6 viewl1 col-xs-6" style="">
                                @*<select id="AssignTo" class="form-control ListItemCapitalize" name="AssignTo"></select>*@
                                <select class="form-control  ListItemCapitalize " id="AssignTo" name="AssignTo" style="margin-top:0px !important;">
                                    <option value="">Select Assign To</option>
                                    @if (Model.AssignToList != null && Model.AssignToList.Count() > 0)
                                    {
                                        foreach (var item in Model.AssignToList)
                                        {
                                            <option value="@item.UserID" translate="no">@item.UserName</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-sm-1 col-xs-6">
                                <input id="Submit2" class="btn btn-success" style="margin-left: 10px; margin-top: 5px;" type="submit" value="Assign Works" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <table class="table table-bordered tablefont">
                            <thead class="black-white-text">
                                <tr>
                                    <th class="selectallm">
                                        Select All <input type="checkbox" name="chkAllWorks" />
                                    </th>
                                    <th>#</th>
                                    <th>Create Date</th>
                                    <th>Customer Name</th>
                                    <th>Project Name</th>
                                    <th>Module</th>
                                    <th>Module Description</th>
                                    <th>Assigned By</th>
                                    @*<th>Assigned To</th>*@
                                    <th>Finish Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{int i = 1;}
                                @if (Model.dailyworkAssignDelevelopermodelList.Count > 0)
                                {
                                    foreach (var item in Model.dailyworkAssignDelevelopermodelList.OrderByDescending(em => em.Id))
                                    {
                                        //string encryptId = HttpUtility.UrlEncode(encode.Encrypt(item.CustomerId.ToString()));
                                        <tr>
                                            <td data-column="Select Work">
                                                <input type="checkbox" name="CalUserWorks" class="chk" value="@item.Id" />
                                            </td>

                                            <td data-column="Sr.No.">@i</td>
                                            <td data-column="Create Date">@item.WorkCreatedDate</td>
                                            <td data-column="Customer"><a href="/home/createleads/?id=@item.CustomerId" target="_blank">@item.CustomerName</a></td>
                                            <td data-column="Porject Name">@item.ProjectName</td>
                                            <td data-column="Module">@item.ModuleName</td>
                                            <td data-column="Module Description">@item.ModuleDescription</td>
                                            <td data-column="Assigned By">@item.AssignedBy</td>
                                            @*<td data-column="Assigned To">@item.AssignedTo</td>*@
                                            <td data-column="Finish Date">@item.FinishingDate</td>
                                        </tr>
                                        i++;
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" style="text-align:center;">** No Record Found</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                                    }
        </div>
    </div>
</div>

<div id="AddWorkModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add New Work</h4>
            </div>
            <div class="modal-body over-hidden">
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-sm-2">Work Create Date</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control clr" id="txtAssignDate" data-date-format="@Session["DpDateFormat"]" autocomplete="off" placeholder="Work Create Date">
                        </div>
                        <label class="control-label col-sm-2">Finish Date</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="txtFinishDate12" autocomplete="off" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-2">Project</label>
                        <div class="col-sm-4">
                            <select id="Project" class="form-control ListItemCapitalize clr" name="Project">
                                <option>Select Project</option>
                            </select>
                        </div>
                        <label class="control-label col-sm-2" for="pwd">Module</label>
                        <div class="col-sm-4">
                            <select id="ProjectModule" class="form-control ListItemCapitalize clr" name="ProjectModule">
                                <option>Select Module</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-2">Customer</label>
                        <div class="col-sm-4">
                            <select id="Customer" class="form-control ListItemCapitalize clr" name="Customer">
                                <option>Select Customer</option>
                            </select>

                        </div>
                        <div class="col-sm-6">
                            <a href="/home/createleads/?newcustomer=1" id="newcustomer"><label class="control-label col-sm-4">Add New Customer</label></a>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-sm-2" for="email">Module Define</label>
                        <div class="col-sm-10">
                            <textarea class="form-control clr" id="txtModuleDescription" rows="5"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success" id="btnSaveWork">Save Work</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>


<script src="~/js/jquery-1.11.3.min.js"></script>
<script src="/Scripts/SweetAlert/sweetalert.min.js"></script>
<link href="/Scripts/SweetAlert/sweetalert.css" rel="stylesheet" />

<script>
    var mas = '@al';
    var chkmsg = '@alchk';
    if (mas != '') {
        swal("Success !", mas, "success");
    }
    if (chkmsg != '') {
        swal("Alert !", chkmsg, "warning");
    }

</script>
<script type="text/javascript">
    var dateFormat = '@Session["DpDateFormat"]';
    $(function () {
        //$('#txtAssignDate').datepicker({
        //    autoclose: true,
        //    format: dateFormat,
        //    validateOnBlur: false,
        //    forceParse: true,
        //    assumeNearbyYear: 20
        //});
        $("#txtAssignDate").datepicker('setDate', new Date());

        $('#txtFinishDate12').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20,

        });

        $('#FromDate').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20,

        });
        $('#ToDate').datepicker({
            autoclose: true,
            format: dateFormat,
            validateOnBlur: false,
            forceParse: true,
            assumeNearbyYear: 20,

        });
    });

    jQuery('input[name="chkAllWorks"]').click(function () {
        if ($(this).is(':checked')) {
            jQuery('.chk').prop('checked', true);
            //that.pageselected = true;
        } else {
            jQuery('.chk').prop('checked', false);
            //that.pageselected = false;
        }
    });

    //Uncheck The Top check if Loop checkbox is Uncheck
    jQuery('.chk').click(function () {
        if (jQuery(this).is(':unchecked')) {
            jQuery('input[name="chkAllWorks"]').prop('checked', false);
        }
        else {
            if (jQuery('.chk:checked').length == jQuery('.chk').length) {
                jQuery('input[name="chkAllWorks"]').prop('checked', true);
            }
        }
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        BindCustomerDDL();
        BindProjectDDL();
        //BindAssignToDDL();

        assignProjectDDL();
        assignCustomerDDL();
        //assignCustomerDDL();

    });


    //function BindAssignToDDL() {
    //    $.get('/Dailywork/BindDDlAssignto', null, function (data) { chkBindAssignToDDL(data); });
    //}
    //function chkBindAssignToDDL(abc) {

    //    var data = "";
    //    data += "<option value= >Select User</option>";
    //    for (var it in abc) {
    //        data += "<option value=" + abc[it].Id + " >" +
    //            abc[it].UserName + "</option>";
    //    }
    //    $('#AssignTo').html(data);
    //}


    function BindProjectDDL() {
        $.get('/NIS/BindDDlProject', null, function (data) { chkBindProjectDDLL(data); });
    }
    function chkBindProjectDDLL(abc) {
        var data = "";
        data += "<option value= >Select Project</option>";
        for (var it in abc) {
            data += "<option value=" + abc[it].Pid + " >" +
                abc[it].ProjectName + "</option>";
        }
        $('#Project').html(data);
    }

    jQuery('#Project').change(function () {
        var ddl = jQuery(this).val();
        BindModuleDDL(ddl);
    });

    function BindModuleDDL(ddl) {
        var PID = ddl;
        $.get('/NIS/BindDDlModule', { pid: PID }, function (data) { chkBindModuleDDL(data); });
    }
    function chkBindModuleDDL(abc) {
        var data = "";
        data += "<option value= >Select Module</option>";
        for (var it in abc) {
            data += "<option value=" + abc[it].ModuleId + " >" +
                abc[it].ProjectModuleName + "</option>";
        }
        $('#ProjectModule').html(data);
    }
    function BindCustomerDDL() {
        debugger;
        $.get('/NIS/BindDDlCustomer', null, function (data) { chkBindCustomerDDLL(data); });
    }
    function chkBindCustomerDDLL(abc) {
        var data = "";
        data += "<option value= >Select Customer</option>";
        for (var it in abc) {
            data += "<option value=" + abc[it].CId + " >" +
                abc[it].CustomerName + "</option>";
        }
        $('#Customer').html(data);
    }

    function assignProjectDDL() {
        $.get('/Dailywork/BindDDlProject', null, function (data) { chkassignProjectDDLL(data); });
    }
    function chkassignProjectDDLL(abc) {
        var data = "";
        data += "<option value= >Select Project</option>";
        for (var it in abc) {
            data += "<option value=" + abc[it].Pid + " >" +
                abc[it].ProjectName + "</option>";
        }
        $('#assignProject').html(data);
    }

    jQuery('#assignProject').change(function () {
        var ddl = jQuery(this).val();
        assignModuleDDL(ddl);

    });

    function assignModuleDDL(ddl) {
        var PID = ddl;
        $.get('/Dailywork/BindDDlModule', { pid: PID }, function (data) { chkassignModuleDDL(data); });
    }
    function chkassignModuleDDL(abc) {
        var data = "";
        data += "<option value= >Select Module</option>";
        for (var it in abc) {
            data += "<option value=" + abc[it].ModuleId + " >" +
                abc[it].ProjectModuleName + "</option>";
        }
        $('#assignProjectModule').html(data);
    }


    function assignCustomerDDL(ddl) {
        $.get('/Dailywork/assignDDlCustomer', null, function (data) { assignBindCustomerDDLL(data); });
    }
    function assignBindCustomerDDLL(abc) {
        var data = "";
        data += "<option value= >Select Customer</option>";
        for (var it in abc) {
            if (it != null) {
                data += "<option value=" + abc[it].CId + " >" +
                    abc[it].CustomerName + "</option>";
            }
        }
        $('#assignCustomer').html(data);
    }
    jQuery('#btnSaveWork').click(function () {
        debugger;
        var txtWorkDate = jQuery('#txtAssignDate').val();
        var DDLProject = jQuery('#Project').val();
        var DDLModule = jQuery('#ProjectModule').val();
        var txtModuleDescr = jQuery('#txtModuleDescription').val();
        var txtFinishDate = jQuery('#txtFinishDate12').val();
        var DDLCustomer = jQuery('#Customer').val();

        //var manualcustomer = jQuery('#txtaddcustomer').val();
        if (txtWorkDate != '' && DDLProject != '' && DDLModule != '' && txtFinishDate != '' && DDLCustomer!='') {
            jQuery.post('/Dailywork/Addwork', { WorkDate: txtWorkDate, Project: DDLProject, Module: DDLModule, ModuleDescription: txtModuleDescr, FinishDate: txtFinishDate, CustomerName: DDLCustomer }, function (data) {
                jQuery('.clr').val('');
                swal({
                    title: "Success !",
                    text: data,
                    type: "success",
                    timer: 3000,
                    showConfirmButton: false
                }, function () {
                    window.location.href = "/Dailywork/Assign";
                });
            });
        }
        else {
            swal("Alert", 'Please input all the data', "warning");
        }
    

    });


    function myFunction() {
        debugger;
        document.getElementById("Customer").classList.toggle("show");
    }

    function filterFunction() {
        var input, filter, ul, li, a, i;
        input = document.getElementById("Customer");
        filter = input.value.toUpperCase();
        div = document.getElementById("Customer");
        a = div.getElementsByTagName("a");
        for (i = 0; i < a.length; i++) {
            txtValue = a[i].textContent || a[i].innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                a[i].style.display = "";
            } else {
                a[i].style.display = "none";
            }
        }
    }
</script>

