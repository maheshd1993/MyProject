@model Svam.Models.ViewModel.SaleOrderVM
<style>
    .printpage {
        font-size: 11px !important;
        font-family: calibri !important;
    }

        .printpage h2, h4 {
            font-size: 11px !important;
            font-family: calibri !important;
        }

        .printpage td, th {
            font-size: 11px !important;
            font-family: calibri !important;
            padding: 1px 5px !important;
            height: 22px;
        }

        .printpage label {
            margin-bottom: 0;
        }
</style>
<div class="modal-dialog modal-lg printpage" style="font-family: calibri !important;">
    <div class="modal-content">
        <div class="modal-body qtmodal" id="div_print" style="padding-top: 10px;">

            <div class="headercontainer" style="border-bottom: 1px solid #777; overflow: hidden; margin-bottom: 15px;">
                <div class="pr_headerleft" style="padding-top: 15px; position: absolute;">
                    <h1 style="margin-top: 0px; font-weight: bold; font-size: 20px; margin-bottom: 5px; text-transform: uppercase;">
                        <span>GSTIN: @Model.RegistrationNo</span>
                    </h1>

                </div>
                <div class="pr_headerright" style="margin: 0 auto; text-align: center; padding-bottom: 6px; width: 100%;">
                    <h4 style="text-align: center;text-transform: uppercase; font-weight: bold;font-size: 20px !important;">Quotation</h4>

                    <h1 style="margin-top: 0px; font-weight: bold; font-size: 20px; margin-bottom: 5px; text-transform: uppercase;">@Model.Organization</h1>
                    <h1 style="margin-top: 0px; font-weight: bold; font-size: 20px; margin-bottom: 5px; text-transform: uppercase;text-align:right">
                        <span>Phone No: @Model.CompanyMobileNo, @Model.CompanyAlternateNo</span>
                    </h1>
                    <h5 style="font-size: 11px; margin-bottom: 0px; line-height: 16px; margin-top: 1px;">
                        @Model.CompanyAddress
                        <br />
                        Email: @Model.CompanyEmail
                    </h5>
                </div>

            </div>

            <!-- print data -->
            <div class="row">
                <div class="col-md-12">
                    <div style="float:left">
                        <div class="qt_left" style="font-size: 15px;">
                            <b> Customer Details :</b>
                        </div>
                        <div class="qt_left" style="font-size: 15px;">
                            <b> Name : <span>@Model.CustomerName</span></b>
                        </div>
                        <div class="qt_left" style="font-size: 15px; padding-right: 20px;">
                            <b>Address : <span>@Model.CustomerAddress</span></b>
                        </div>
                        <div class="qt_left" style="font-size: 15px;">
                            <b>Mobile : <span>@Model.CustomerMobileNo</span></b>
                        </div>
                    </div>

                    <div style="float:right">
                        <div class="qt_left" style="font-size: 15px;">
                            <b>Order No : <span>@Model.OrderNo</span></b>
                        </div>
                        <div class="qt_left" style="font-size: 15px;">
                            <b>Date : <span>@Model.DeliveryDate</span></b>
                        </div>
                        <div class="qt_left" style="font-size: 15px;">
                            <b>Place of supply : <span>@Model.PlaceOfSupply</span></b>
                        </div>
                        <div class="qt_left" style="font-size: 15px;">

                        </div>
                    </div>
                </div>

            </div>



            <div class="qt_left" style="font-size: 11px;">
                <span>&nbsp;</span>
            </div>

            <!-- service item -->
            <br style="clear: both;">

            @if (Model.SaleReport != null && Model.SaleReport.Count > 0)
            {
                <table class="table table-striped printtable table-hover table-bordered" style="margin-top: 5px;">
                    <thead>
                        <tr>
                            <th width="2%" style="font-size: 11px; height: 15px;">Sr.No </th>
                            <th width="15%" style="font-size: 11px; height: 15px;">DESCRIPTION OF GOODS</th>
                            <th width="15%" style="font-size: 11px; height: 15px;">HSN Code</th>
                            <th width="7%" style="font-size: 11px; height: 15px;">QTY</th>
                            <th width="10%" style="font-size: 11px; height: 15px;">UNIT PRICE</th>
                            <th width="10%" style="font-size: 11px; height: 15px;">Total</th>
                            @if (Model.TaxTypeName.ToLower() != "total")
                            {
                                <th width="10%" style="font-size: 11px; height: 15px;">NET TAXABLE AMOUNT</th>
                                <th width="10%" style="font-size: 11px; height: 15px;">CGST(%)</th>
                                <th width="10%" style="font-size: 11px; height: 15px;">CGST Amount</th>
                                <th width="10%" style="font-size: 11px; height: 15px;">SGST(%)</th>
                                <th width="10%" style="font-size: 11px; height: 15px;">SGST/UGST Amount</th>
                                <th width="10%" style="font-size: 11px; height: 15px;">IGST(%) </th>
                                <th width="10%" style="font-size: 11px; height: 15px;">IGST Amount </th>
                                <th width="13%" style="font-size: 11px; height: 15px;">Gross Amount</th>
                            }

                        </tr>
                    </thead>
                    <tbody>
                        @{int ii = 1;
                        }
                        @foreach (var item in Model.SaleReport)
                        {

                            <tr>
                                <td style="font-size: 11px;">@ii</td>
                                <td style="font-size: 11px;">
                                    <p>@item.ItemName </p>
                                </td>
                                <td class="t-right" style="font-size: 11px;">@item.HSN</td>
                                <td class="t-right" style="font-size: 11px;">@item.Qty</td>
                                <td class="t-right" style="font-size: 11px;">@(Model.TaxTypeName.ToLower() == "total" ? item.OurPrice : item.Price)</td>
                                <td class="t-right" style="font-size: 11px;">@item.Total</td>

                                @if (Model.TaxTypeName.ToLower() != "total")
                                {
                                    <td class="t-right" style="font-size: 11px;">@item.NetTaxable</td>
                                    <td class="t-right" style="font-size: 11px;">@item.CGSTPer</td>
                                    <td class="t-right" style="font-size: 11px;">@item.CGSTAmount</td>
                                    <td class="t-right" style="font-size: 11px;">@item.CGSTPer</td>
                                    <td class="t-right" style="font-size: 11px;">@item.CGSTAmount</td>
                                    <td class="t-right" style="font-size: 11px;">@item.IGSTPer</td>
                                    <td class="t-right" style="font-size: 11px;">@item.IGSTAmount</td>
                                    <td class="t-right" style="font-size: 11px;">
                                        @*@{
                                                decimal grossAmount = item.CGSTAmount + item.CGSTAmount + item.IGSTAmount;
                                            }*@
                                        <span>@Model.NetAmount</span>
                                    </td>
                                }

                            </tr>
                            ii++;
                        }

                    </tbody>
                </table>
            }
            <br style="clear: both;" />
            <div class="totalwrap">
                <table class="table table-striped table-bordered">
                    <tbody>
                        <tr>
                            <th width="60%"></th>
                            <th width="15%"></th>
                            <th width="20%"></th>
                        </tr>
                        <tr>
                            <td></td>
                            <td style="font-size: 11px;font-weight:bold">Total Amount</td>
                            <td class="t-right"><i class="fa fa-inr" aria-hidden="true"></i><span id="spTotal">@Model.SaleReport.Sum(a => a.Total)</span> </td>
                        </tr>
                        @if (Model.TaxTypeName.ToLower() == "total")
                        {
                            <tr>
                                <td></td>
                                <td style="font-size: 11px;font-weight:bold">Total Tax</td>
                                <td align="right">@Model.TotalTax</td>
                            </tr>
                        }

                        <tr>
                            <td></td>
                            <td style="font-size: 11px;font-weight:bold">Round Off</td>
                            <td align="right"><span id="spRound">@Model.RoundOff</span></td>
                        </tr>

                        <tr>
                            <td></td>
                            <td style="font-size: 11px;font-weight:bold">Net Amount</td>
                            <td class="t-right"><i class="fa fa-inr" aria-hidden="true"></i><span @*id="spGrandTotal"*@>@Model.NetAmount</span> </td>
                        </tr>
                        <tr>
                            <td colspan="3" style="font-size: 11px;"><strong>Rupees:-</strong> <span @*id="spAmountInWord"*@>@Model.AmountInWord</span></td>
                        </tr>
                    </tbody>
                </table>

            </div>

            <br style="clear: both;" />
            <div class="leftremark" style=" border-top: 1px dashed #777; padding-top: 0px; margin-top: 5px;">
                @*<h4 style="margin-bottom: 20px; font-size: 11px;">Terms & Conditions</h4>*@
                @*@Html.TextAreaFor(em => em.Remarks, new { @class = "form-control disabletext", @rows = "5",@style="border:none !important; box-shadow:none;" })*@

            </div>
            <div class="leftremark" style="min-height: 50px; text-align: right; border-top: 1px dashed #777; padding-top: 0px; margin-top: 5px;">
                <h4 style="font-size: 20px; font-weight:bold">For @Model.Organization</h4>
            </div>
            <br style="clear: both;" />

            <div class="leftremark" style="text-align: right; padding-top: 0px;">
                <h4 style=" font-size: 20px;font-weight:bold">[Authorised Signatory]<span style="color: #777;"></span></h4>
            </div>


            <!-- end print data  -->
        </div>

        <div class="printbtnwrap" style="text-align:center">
            <button class="btn btn-info printbtnmain" onclick="printdiv('div_print');">Print</button>
        </div>
        <br style="clear: both;">
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>

<script>
    nearestWholeNumber();
    function nearestWholeNumber() {
        var x = document.getElementById("spTotal").innerHTML;
        var decimals = x - Math.floor(x);
        var round = 1 - decimals;
        if (decimals <= 0) {
            round = 0.00;
            document.getElementById("spRound").innerHTML = round.toFixed(2);
        }
        else if (decimals >= 0.5) {
            document.getElementById("spGrandTotal").innerHTML = Math.round(x) + ".00";
            test_skill(Math.round(x));
            document.getElementById("spRound").innerHTML = round.toFixed(2);
            //document.getElementById("spAmountInWord").innerHTML = test_skill(Math.round(x));
        }
        else {

            document.getElementById("spGrandTotal").innerHTML = Math.floor(x) + ".00";
            document.getElementById("spRound").innerHTML = decimals.toFixed(2);
            test_skill(Math.floor(x));
            //document.getElementById("spAmountInWord").innerHTML = test_skill(Math.floor(x));
        }
        // document.getElementById("spRound").innerHTML = round.toFixed(2);
        //console.log(decimals.toFixed(2));
    };
    function test_skill(junkVal) {
        junkVal = Math.floor(junkVal);
        var obStr = new String(junkVal);
        numReversed = obStr.split("");
        actnumber = numReversed.reverse();

        if (Number(junkVal) >= 0) {
            //do nothing
        }
        else {
            alert('wrong Number cannot be converted');
            return false;
        }
        if (Number(junkVal) == 0) {
            document.getElementById('container').innerHTML = obStr + '' + 'Rupees Zero Only';
            return false;
        }
        if (actnumber.length > 9) {
            alert('Oops!!!! the Number is too big to covertes');
            return false;
        }

        var iWords = ["Zero", " One", " Two", " Three", " Four", " Five", " Six", " Seven", " Eight", " Nine"];
        var ePlace = ['Ten', ' Eleven', ' Twelve', ' Thirteen', ' Fourteen', ' Fifteen', ' Sixteen', ' Seventeen', ' Eighteen', ' Nineteen'];
        var tensPlace = ['dummy', ' Ten', ' Twenty', ' Thirty', ' Forty', ' Fifty', ' Sixty', ' Seventy', ' Eighty', ' Ninety'];

        var iWordsLength = numReversed.length;
        var totalWords = "";
        var inWords = new Array();
        var finalWord = "";
        j = 0;
        for (i = 0; i < iWordsLength; i++) {
            switch (i) {
                case 0:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + ' Only';
                    break;
                case 1:
                    tens_complication();
                    break;
                case 2:
                    if (actnumber[i] == 0) {
                        inWords[j] = '';
                    }
                    else if (actnumber[i - 1] != 0 && actnumber[i - 2] != 0) {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred and';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]] + ' Hundred';
                    }
                    break;
                case 3:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Thousand";
                    }
                    break;
                case 4:
                    tens_complication();
                    break;
                case 5:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    if (actnumber[i + 1] != 0 || actnumber[i] > 0) {
                        inWords[j] = inWords[j] + " Lakh";
                    }
                    break;
                case 6:
                    tens_complication();
                    break;
                case 7:
                    if (actnumber[i] == 0 || actnumber[i + 1] == 1) {
                        inWords[j] = '';
                    }
                    else {
                        inWords[j] = iWords[actnumber[i]];
                    }
                    inWords[j] = inWords[j] + " Crore";
                    break;
                case 8:
                    tens_complication();
                    break;
                default:
                    break;
            }
            j++;
        }

        function tens_complication() {
            if (actnumber[i] == 0) {
                inWords[j] = '';
            }
            else if (actnumber[i] == 1) {
                inWords[j] = ePlace[actnumber[i - 1]];
            }
            else {
                inWords[j] = tensPlace[actnumber[i]];
            }
        }
        inWords.reverse();
        for (i = 0; i < inWords.length; i++) {
            finalWord += inWords[i];
        }
        //document.getElementById('SpnAmtInWorld').innerHTML = obStr + '  ' + finalWord;
        //document.getElementById('AmtinWords').innerHTML = finalWord;
        //alert(finalWord);
        //document.getElementById("spAmountInWord").innerHTML = finalWord;
        //jQuery('#spAmountInWord').innerHTML(finalWord);
    }
    function printdiv(printpage) {

        var printContents = document.getElementById(printpage).innerHTML;
        var originalContents = document.body.innerHTML;
        document.body.style.fontFamily = "calibri";
        document.body.style.fontSize = "11";
        document.body.innerHTML = printContents;
        window.print();
        document.body.innerHTML = originalContents;
        window.open('/Quotation/ManageQuotation', '_self', '');
        window.close();
    }
</script>
